#!/groovy

WorkPath = '/var/tomcat-test'

CompilePackagePath = '/var/package'

pipeline {
    agent {
      node {
          label "host-vm"
          customWorkspace "${WorkPath}"
      }
    }
    stages {
        stage('Init') {
            steps {
                echo "init"
                sh "mkdir -p $CompilePackage"
            }
        }
        stage('Test') {
            steps {
                echo "Test"
            }
        }
        stage('Build') {
            steps {
                sh "cd server && mvn clean package"
                sh "cp server/target/*.war docker/"
            }
        }
        stage('Archive') {
            steps {
                script {
                    sh "cd docker && docker build -t tomcat:my-latest"
                    sh "cd docker && docker save tomcat:my-latest > tomcat.tar"
                    out = sh(script: "[ -f $CompilePackagePath/tomcat.tar ]  && echo 'true' || echo 'false'", returnStdout: true)
                    println out
                    if(out == "false") {
                        sh "cp docker/tomcat.tar $CompilePackagePath/"
                    }
                    if(out == "true") {
                        now = sh(script: "date +%s", returnStdout: true).trim()
                        println now
                        sh "mv $CompilePackagePath/tomcat.tar $CompilePackagePath/tomcat.tar.$now"
                        sh "cp docker/tomcat.tar $CompilePackagePath/"
                    }
                    sh "docker rmi -f tomcat:my-latest"
                }
            }
        }
    }
}
